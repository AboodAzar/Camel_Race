datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  SUPERVISOR
  USER
}

enum Sex {
  Male
  Female
}

enum Age {
  GradeOne
  GradeTwo
  GradeThree
  GradeFour
  GradeFive
  GradeSixMale
  GradeSixFemale
}
model User {
  id              String   @id @default(cuid())
  FirstName       String
  FatherName      String
  GrandFatherName String
  FamilyName      String
  username        String   @unique
  email           String   @unique
  NationalID      String   @unique
  BDate           DateTime
  MobileNumber    String
  emailVerified   DateTime?
  password        String
  image           String?
  role            Role?    @default(USER)
  camels          Camel[]
}

model Camel {
  id        Int     @id @default(autoincrement())
  name      String
  camelID   String  @unique
  age       Age
  sex       Sex
  ownerId   String
  owner     User    @relation(fields: [ownerId], references: [id])
  loops     CamelLoop[]     
}

model Event {
  id          String   @id @default(cuid())
  name        String
  StartDate   DateTime
  EndDate     DateTime
  loops       Loop[]
}

model Loop {
  id           String   @id @default(cuid())
  capacity     Int
  sex          Sex  
  age          Age  
  time         String   
  startRegister DateTime
  endRegister  DateTime
  eventId      String
  event        Event     @relation(fields: [eventId], references: [id])  
  camels       CamelLoop[]  
}

model CamelLoop {
  id      String   @id @default(cuid())
  camelId Int
  loopId  String
  camel   Camel   @relation(fields: [camelId], references: [id])
  loop    Loop    @relation(fields: [loopId], references: [id])

  @@unique([camelId, loopId], name: "camel_unique_in_event")  
}